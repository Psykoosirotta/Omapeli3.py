import pygame
import random
from pygame.locals import *

pygame.init()
vec = pygame.math.Vector2

#Peliruudun tiedot 
korkeus = 450
leveys = 400
acc= 0.5
fric = -0.12
fps = 60

FramePerSec= pygame.time.Clock()

displaysurface = pygame.display.set_mode((leveys, korkeus))
pygame.display.set_caption("Projekti 2")

#Hahmo: Liikkuvuus, (Grafiikat)
class Player (pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        #self.image = pygame.image.load("still.png")
        self.surf = pygame.Surface((30,30))
        self.surf.fill((128,255,40))
        self.rect = self.surf.get_rect(center =(10, 420))

        self.pos = vec((10, 360))
        self.vel = vec(0,0)
        self.acc = vec(0,0)
    
    def move(self):
        self.acc = vec(0,0.5)

        painallukset = pygame.key.get_pressed()

        if painallukset[K_LEFT]:
            self.acc.x = -acc
        if painallukset[K_RIGHT]:
            self.acc.x = acc

        self.acc.x += self.vel.x * fric
        self.vel += self.acc
        self.pos += self.vel + 0.5 * self.acc  
        
        if self.pos.x > leveys:
            self.pos.x = 0
        if self.pos.x < 0:
            self.pos.x = leveys
        
        self.rect.midbottom = self.pos
        
#Hyppyfunktio jonka avulla hahmo hyppää
    def jump(self):
        osuma = pygame.sprite.spritecollide(P1, platforms, False)
        if osuma:
            self.vel.y = -15
            
#Funktio jonka avulla hahmo ei tipu lattiasta läpi
    def update(self):
        osuma = pygame.sprite.spritecollide(P1, platforms, False)
        if P1.vel.y > 0:
            if osuma:
                self.vel.y = 0
                self.pos.y = osuma[0].rect.top + 1 

#Platformit 
class platform(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.surf = pygame.Surface((random.randint(50,100), 12))
        self.surf.fill((0,255,0))
        self.rect = self.surf.get_rect(center = (random.randint(0,leveys-10), random.randint(0,korkeus-30)))
        
Pt1 = platform()
P1 = Player()

for x in range(random.randint(5,6)):
    pl = platform()
    platforms.add(pl)
    all_sprites.add(pl)

#Main platformi
Pt1.surf = pygame.Surface((leveys , 20))
Pt1.surf.fill((255,0,0))
Pt1.rect = Pt1.surf.get_rect(center =(leveys/2, korkeus -10))

all_sprites = pygame.sprite.Group()
all_sprites.add(Pt1)
all_sprites.add(P1)

platforms = pygame.sprite.Group()
platforms.add(Pt1)

for x in range(random.randint(5,6)):
    pl=platform()
    platforms.add(pl)
    all_sprites.add(pl)
    
    
def text_objects(text,color):
    textSurface = font.render(text, True, color)
    return textSurface, textSurface.get_rect()

def message_to_screen (msg, color, y_displace=0):
    textSurf, textRect = text_objects (msg, color)
    textRect.center = (display_width / 2), (display_height / 2) + y_displace
    displaysurface.blit(textSurf, textRect)


def game_intro():
    intro = True
    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    intro = False
                if event.key == pygame.K_ESCAPE:
                    pygame.quit()
                    quit()





        
        displaysurface.fill((0,0,0))
        message_to_screen("Kerää opintopisteet tai joudut työkkäriin", red, -100)
        message_to_screen("Paina avaruutta pelataksesi", red, -30)
        message_to_screen("Paina pakene näppäintä lopettaaksesi", red, 10)


       
        pygame.display.update()
        pygame.display.flip()

#Peliluuppi älä koske 
game_intro()
while True:
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                P1.jump()

    displaysurface.fill((0,0,0))
    P1.update()
    P1.move()


    for entity in all_sprites:
        displaysurface.blit(entity.surf, entity.rect)
    
    pygame.display.update()
    FramePerSec.tick(fps)
